[{"D:\\Libro\\WebUI\\library\\src\\main.ts":"1","D:\\Libro\\WebUI\\library\\src\\App.vue":"2","D:\\Libro\\WebUI\\library\\src\\router\\index.ts":"3","D:\\Libro\\WebUI\\library\\src\\views\\TestPageView.vue":"4","D:\\Libro\\WebUI\\library\\src\\views\\AboutView.vue":"5","D:\\Libro\\WebUI\\library\\src\\views\\LoginView.vue":"6","D:\\Libro\\WebUI\\library\\src\\views\\BookView.vue":"7","D:\\Libro\\WebUI\\library\\src\\views\\HomeView.vue":"8","D:\\Libro\\WebUI\\library\\src\\views\\BorrowView.vue":"9","D:\\Libro\\WebUI\\library\\src\\views\\NavView.vue":"10","D:\\Libro\\WebUI\\library\\src\\views\\ReturnView.vue":"11","D:\\Libro\\WebUI\\library\\src\\views\\SystemView.vue":"12","D:\\Libro\\WebUI\\library\\src\\views\\UserView.vue":"13","D:\\Libro\\WebUI\\library\\src\\store\\index.ts":"14","D:\\Libro\\WebUI\\library\\src\\views\\RegisterView.vue":"15","D:\\Libro\\WebUI\\library\\src\\views\\OvertimeView.vue":"16"},{"size":389,"mtime":1703854389978,"results":"17","hashOfConfig":"18"},{"size":335,"mtime":1703854389978,"results":"19","hashOfConfig":"18"},{"size":2928,"mtime":1703995432276,"results":"20","hashOfConfig":"18"},{"size":399,"mtime":1703854389979,"results":"21","hashOfConfig":"18"},{"size":1128,"mtime":1704009978259,"results":"22","hashOfConfig":"18"},{"size":4178,"mtime":1703997057533,"results":"23","hashOfConfig":"18"},{"size":18920,"mtime":1703854389978,"results":"24","hashOfConfig":"18"},{"size":3688,"mtime":1704009691117,"results":"25","hashOfConfig":"18"},{"size":4346,"mtime":1703854389979,"results":"26","hashOfConfig":"18"},{"size":5109,"mtime":1703854389979,"results":"27","hashOfConfig":"18"},{"size":6278,"mtime":1703854389979,"results":"28","hashOfConfig":"18"},{"size":8921,"mtime":1703854389979,"results":"29","hashOfConfig":"18"},{"size":23035,"mtime":1704009831558,"results":"30","hashOfConfig":"18"},{"size":145,"mtime":1703854389978,"results":"31","hashOfConfig":"18"},{"size":6399,"mtime":1704008930882,"results":"32","hashOfConfig":"18"},{"size":6574,"mtime":1703854389979,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"45vbb3",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Libro\\WebUI\\library\\src\\main.ts",[],"D:\\Libro\\WebUI\\library\\src\\App.vue",[],"D:\\Libro\\WebUI\\library\\src\\router\\index.ts",[],"D:\\Libro\\WebUI\\library\\src\\views\\TestPageView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\AboutView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\LoginView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\BookView.vue",["71","72","73","74","75","76"],"<template>\n  <div class=\"book\">\n    <el-container>\n      <el-main>\n        <!--        图书操作栏-->\n        <el-row class=\"book-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"4\">\n                <el-select\n                  v-model=\"searchModel\"\n                  placeholder=\"搜索类型\"\n                  @change=\"changeSearch\"\n                  class=\"search-size\"\n                >\n                  <el-option\n                    v-for=\"item in searchOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"14\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n          <el-col :span=\"4\" class=\"add-button-pane\">\n            <el-button\n              type=\"success\"\n              :icon=\"Plus\"\n              class=\"add-button\"\n              @click=\"addFromButton(addBookFormRef)\"\n            >\n              添加图书\n            </el-button>\n          </el-col>\n        </el-row>\n        <!--        图书表格栏-->\n        <el-row class=\"book-table\">\n          <el-col>\n            <el-table :data=\"books\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"groups\" label=\"组名\" />\n              <el-table-column prop=\"name\" label=\"书名\" />\n              <el-table-column prop=\"author\" label=\"作者\" />\n              <el-table-column prop=\"press\" label=\"出版社\" />\n              <el-table-column prop=\"price\" label=\"价格(人民币)\" />\n              <el-table-column prop=\"quantity\" label=\"数量(本)\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"books\">\n                  <el-button\n                    @click=\"editFromButton(editBookFormRef, books.row)\"\n                    type=\"text\"\n                    >编辑</el-button\n                  >\n                  <el-button @click=\"deleteBookDialog(books.row)\" type=\"text\"\n                    >删除</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n\n        <!--         添加图书表单 -->\n        <el-dialog\n          v-model=\"addBookFormVisible\"\n          title=\"添加书籍\"\n          class=\"add-book-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"addBookForm\"\n            :rules=\"bookRules\"\n            ref=\"addBookFormRef\"\n            class=\"add-book-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"addBookForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in bookType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"书名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"addBookForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"作者\"\n              :label-width=\"formLabelWidth\"\n              prop=\"author\"\n            >\n              <el-input\n                v-model=\"addBookForm.author\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"出版社\"\n              :label-width=\"formLabelWidth\"\n              prop=\"press\"\n            >\n              <el-input\n                v-model=\"addBookForm.press\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"价格(人民币)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"price\"\n            >\n              <el-input\n                v-model=\"addBookForm.price\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"数量(本)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"quantity\"\n            >\n              <el-input\n                v-model.number=\"addBookForm.quantity\"\n                autocomplete=\"off\"\n                maxlength=\"3\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"ISBN号码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"isbn\"\n            >\n              <el-input\n                v-model.number=\"addBookForm.isbn\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"addBookFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click=\"addBookButton(addBookFormRef)\">\n                添加\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        编辑图书表单-->\n        <el-dialog\n          v-model=\"editBookFormVisible\"\n          title=\"编辑书籍\"\n          class=\"edit-book-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"editBookForm\"\n            :rules=\"bookRules\"\n            ref=\"editBookFormRef\"\n            class=\"edit-book-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"editBookForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in bookType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"书名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"editBookForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"作者\"\n              :label-width=\"formLabelWidth\"\n              prop=\"author\"\n            >\n              <el-input\n                v-model=\"editBookForm.author\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"出版社\"\n              :label-width=\"formLabelWidth\"\n              prop=\"press\"\n            >\n              <el-input\n                v-model=\"editBookForm.press\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"价格(人民币)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"price\"\n            >\n              <el-input\n                v-model=\"editBookForm.price\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"数量(本)\"\n              :label-width=\"formLabelWidth\"\n              prop=\"quantity\"\n            >\n              <el-input\n                v-model.number=\"editBookForm.quantity\"\n                autocomplete=\"off\"\n                maxlength=\"3\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"ISBN号码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"isbn\"\n            >\n              <el-input\n                v-model.number=\"editBookForm.isbn\"\n                autocomplete=\"off\"\n                maxlength=\"13\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"editBookFormVisible = false\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                @click=\"editBookButton(editBookFormRef)\"\n              >\n                编辑\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        删除图书对话框-->\n        <el-dialog\n          v-model=\"deleteBookDialogVisible\"\n          title=\"删除图书\"\n          width=\"500px\"\n        >\n          <span>确认删除 {{ deleteName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"deleteBookDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"danger\" @click=\"deleteBook\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from \"vue\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { Plus, Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\nimport router from \"@/router\";\n\n// 标签长度\nlet formLabelWidth = 120;\n\n// 获取图书数据\nlet books = ref();\nconst getBook = () => {\n  axios\n    .get(\"http://localhost:8888/book/\" + pageNum.value + \"/\" + pageSize.value)\n    .then((resp) => {\n      books.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getBook();\n  } else {\n    searchBook();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getBook();\n  } else {\n    searchBook();\n  }\n};\n\n// 搜索框选项\nlet searchModel = ref(\"name\");\nlet searchOptions = [\n  {\n    value: \"name\",\n    label: \"图书名称\",\n  },\n  {\n    value: \"author\",\n    label: \"作者名称\",\n  },\n  {\n    value: \"press\",\n    label: \"出版社名称\",\n  },\n  {\n    value: \"isbn\",\n    label: \"ISBN号码\",\n  },\n];\nconst changeSearch = (value: string) => {\n  searchModel.value = value;\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchBook();\n};\n// 搜索图书\nconst searchBook = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://localhost:8888/book/search/\" +\n          searchModel.value +\n          \"/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        books.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getBook();\n  }\n};\n\n// 图书表单判断\nconst checkISBN = (rule: any, value: any, callback: any) => {\n  if (!value) {\n    return callback(new Error(\"请输入ISBN号码\"));\n  } else {\n    if (!Number.isInteger(value)) {\n      callback(new Error(\"请输入正确的ISBN号码\"));\n    } else {\n      let isbnReg = /^[1-9]\\d{12}$/;\n      if (!isbnReg.test(value)) {\n        callback(new Error(\"请输入13位ISBN号码\"));\n      } else {\n        callback();\n      }\n    }\n  }\n};\n// 图书表单规则\nconst bookRules = reactive<FormRules>({\n  groups: [{ required: true, message: \"请输入组名称\", trigger: \"change\" }],\n  name: [{ required: true, message: \"请输入图书名称\", trigger: \"blur\" }],\n  author: [{ required: true, message: \"请输入作者名称\", trigger: \"blur\" }],\n  press: [{ required: true, message: \"请输入出版社名称\", trigger: \"blur\" }],\n  price: [{ required: true, message: \"请输入价格(人民币)\", trigger: \"blur\" }],\n  quantity: [{ required: true, message: \"请输入数量(本)\", trigger: \"blur\" }],\n  isbn: [{ required: true, validator: checkISBN, trigger: \"blur\" }],\n});\n\n// 图书种类选项框\nlet bookType = ref();\n// 获取图书种类\nconst getBookType = () => {\n  axios.get(\"http://localhost:8888/book/type\").then((resp) => {\n    bookType.value = resp.data;\n  });\n};\n\n// 添加图书对话框显示\nlet addBookFormVisible = ref(false);\n// 添加表单按钮\nconst addFromButton = (formEl: FormInstance | undefined) => {\n  addBookFormVisible.value = true;\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 添加图书表单\nconst addBookFormRef = ref<FormInstance>();\nlet addBookForm = reactive({\n  groups: \"\",\n  name: \"\",\n  author: \"\",\n  press: \"\",\n  price: \"\",\n  quantity: \"\",\n  isbn: \"\",\n});\n\n// 添加图书按钮\nconst addBookButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://localhost:8888/book/save\", addBookForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 添加失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"添加图书失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 添加成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"添加成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                addBookFormVisible.value = false;\n              },\n            });\n          }\n          // ISBN号码存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"添加失败，此ISBN号码已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 编辑图书对话框\nlet editBookFormVisible = ref(false);\nconst editFromButton = (formEl: FormInstance | undefined, row: any) => {\n  editBookFormVisible.value = true;\n  editBookForm = reactive(JSON.parse(JSON.stringify(row)));\n  editBookForm.isbn = Number(row.isbn);\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 编辑图书表单\nconst editBookFormRef = ref<FormInstance>();\nlet editBookForm = reactive({\n  groups: \"\",\n  name: \"\",\n  author: \"\",\n  press: \"\",\n  price: \"\",\n  quantity: \"\",\n  isbn: \"\",\n});\n\n// 编辑图书按钮\nconst editBookButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://localhost:8888/book/update\", editBookForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 编辑失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"编辑图书失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 编辑成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"编辑成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                editBookFormVisible.value = false;\n              },\n            });\n          }\n          // ISBN号码存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"编辑失败，此ISBN号码已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 删除图书\nlet deleteName = ref(\"\");\nlet deleteId = ref(0);\nlet deleteBookDialogVisible = ref(false);\nconst deleteBookDialog = (row: any) => {\n  deleteId.value = row.id;\n  deleteName.value = row.name;\n  deleteBookDialogVisible.value = true;\n};\n\n// 删除图书按钮\nconst deleteBook = () => {\n  if (deleteId.value) {\n    axios\n      .post(\"http://localhost:8888/book/delete/\" + deleteId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 删除失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"删除图书失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 删除成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"删除成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              deleteBookDialogVisible.value = false;\n            },\n          });\n        }\n        // Id 不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"删除失败，此 Id 不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  // 获取图书\n  getBook();\n  // 获取图书种类\n  getBookType();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/book\";\n</style>\n","D:\\Libro\\WebUI\\library\\src\\views\\HomeView.vue",["77","78","79","80"],"<template>\n  <div class=\"home\">\n    <el-main>\n      <!--      仪表盘-->\n      <el-row class=\"dashboard\">\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"book-num pane\"\n          ><div>\n            <el-icon><Reading /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">图书馆书本数量</p>\n              <p class=\"sub-title\">{{ bookCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"overtime-num pane\"\n          ><div>\n            <el-icon><Failed /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">超时归还数量</p>\n              <p class=\"sub-title\">{{ overtimeCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"borrow-num pane\"\n          ><div>\n            <el-icon><List /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">借出书本数量</p>\n              <p class=\"sub-title\">{{ borrowCount }}</p>\n            </div>\n          </div></el-col\n        >\n        <el-col :xs=\"24\" :sm=\"12\" :lg=\"6\" class=\"system-time pane\"\n          ><div>\n            <el-icon><Timer /></el-icon>\n            <div class=\"message\">\n              <p class=\"title\">系统时间</p>\n              <p class=\"time\">{{ times }}</p>\n            </div>\n          </div></el-col\n        >\n      </el-row>\n      <!--      日志卡片-->\n      <el-card class=\"log\">\n        <template #header>\n          <span>操作日志</span>\n        </template>\n        <el-table\n          style=\"width: 100%\"\n          height=\"600\"\n          :data=\"logs\"\n          :default-sort=\"{ prop: 'date', order: 'descending' }\"\n        >\n          <el-table-column\n            prop=\"time\"\n            label=\"日期/时间\"\n            sortable\n            width=\"220px\"\n          />\n          <el-table-column prop=\"name\" label=\"名字\" width=\"120px\" />\n          <el-table-column prop=\"info\" label=\"操作\" />\n        </el-table>\n      </el-card>\n    </el-main>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { Reading, Failed, List, Timer } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\n\n// 仪表盘数据\nlet bookCount = ref(0);\nlet overtimeCount = ref(0);\nlet borrowCount = ref(0);\nlet times = ref(\"\");\n\n//系统时间\nsetInterval(function () {\n  let date = new Date();\n  let year = date.getFullYear(); //获取当前年份\n  let mon = date.getMonth() + 1; //获取当前月份\n  let da = date.getDate(); //获取当前日\n  let day = date.getDay(); //获取当前星期几\n  let h: any = date.getHours(); //获取小时\n  let m: any = date.getMinutes(); //获取分钟\n  let s: any = date.getSeconds(); //获取秒\n  let weeks = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"]; //星期\n  let d = document.getElementById(\"Date\");\n  if (h < 10) {\n    h = \"0\" + h;\n  }\n  if (m < 10) {\n    m = \"0\" + m;\n  }\n  if (s < 10) {\n    s = \"0\" + s;\n  }\n  times.value =\n    year +\n    \"-\" +\n    mon +\n    \"-\" +\n    da +\n    \" \" +\n    \"星期\" +\n    weeks[day] +\n    \" \" +\n    h +\n    \":\" +\n    m +\n    \":\" +\n    s;\n}, 1);\n\n// 获取仪表盘数据\nconst getDashboard = () => {\n  axios.get(\"http://localhost:8888/book/dashboard/\").then((resp) => {\n    bookCount.value = resp.data.bookCount;\n    overtimeCount.value = resp.data.overtimeCount;\n    borrowCount.value = resp.data.borrowCount;\n  });\n};\ngetDashboard();\n\n// 获取日志数据\nlet logs = ref();\nconst getLogs = () => {\n  axios.get(\"http://localhost:8888/nav/logs/\").then((resp) => {\n    logs.value = resp.data.content;\n  });\n};\ngetLogs();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/home\";\n</style>\n","D:\\Libro\\WebUI\\library\\src\\views\\BorrowView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\NavView.vue",["81","82","83"],"<template>\n  <div class=\"nav\">\n    <el-container class=\"layout-container-demo\" style=\"height: 100%\">\n      <el-aside>\n        <!--        导航栏-->\n        <el-scrollbar>\n          <div class=\"title\"><p>图书管理系统</p></div>\n          <el-menu router :default-active=\"$route.path\" unique-opened>\n            <el-menu-item index=\"/home\" @click=\"addTab('主页', '/home')\"\n              ><el-icon><House /></el-icon>主页</el-menu-item\n            >\n            <el-sub-menu\n              v-for=\"(item, index) in this.$router['options'].routes\"\n              :key=\"index + 1\"\n              :index=\"index + ''\"\n              v-show=\"item.meta.show\"\n            >\n              <template #title>\n                <el-icon v-if=\"item.name === '图书'\"><Reading /></el-icon>\n                <el-icon v-if=\"item.name === '其他'\"><Setting /></el-icon>\n                <el-icon v-if=\"item.name === '用户'\"><User /></el-icon>\n                <p>{{ item.name }}</p>\n              </template>\n              <el-menu-item\n                v-for=\"(item2, index2) in item.children\"\n                :key=\"index2\"\n                :index=\"item2.path\"\n                v-show=\"item2.meta.show\"\n                @click=\"addTab(item2.name, item2.path)\"\n              >\n                {{ item2.name }}\n              </el-menu-item>\n            </el-sub-menu>\n            <el-menu-item @click=\"loginOut\"\n              ><el-icon><Back /></el-icon>退出系统</el-menu-item\n            >\n          </el-menu>\n        </el-scrollbar>\n      </el-aside>\n\n      <el-main>\n        <!--        用户信息工具栏-->\n        <div class=\"toolbar\">\n          <span>{{ userInfo.username }}</span>\n          <el-dropdown>\n            <el-icon><Setting /></el-icon>\n            <template #dropdown>\n              <el-dropdown-menu>\n                <el-dropdown-item @click=\"loginOut\">登出</el-dropdown-item>\n              </el-dropdown-menu>\n            </template>\n          </el-dropdown>\n        </div>\n        <!--        标签栏-->\n        <div class=\"tabs\">\n          <el-tabs\n            v-model=\"editableTabsValue\"\n            @tab-click=\"tabClick\"\n            @tab-remove=\"tabRemove\"\n          >\n            <el-tab-pane\n              v-for=\"item in editableTabs\"\n              :label=\"item.name\"\n              :key=\"item.path\"\n              :name=\"item.path\"\n              :closable=\"item.closable\"\n            >\n              <router-view\n                :key=\"item.path\"\n                :name=\"item.routerName\"\n              ></router-view>\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { House, Reading, User, Setting, Back } from \"@element-plus/icons-vue\";\nimport router from \"../router/index\";\nimport jsCookie from \"js-cookie\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 判断用户登录状态\nconst userLoginState = jsCookie.get(\"username\");\nif (userLoginState == undefined) {\n  ElMessageBox.alert(\"登录信息已过期，请重新登录\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/login\");\n    },\n  });\n}\n\n// 用户信息\nconst userInfo = ref({\n  username: jsCookie.get(\"username\"),\n});\n\n// 退出系统\nconst loginOut = () => {\n  ElMessageBox.alert(\"您已成功登出\", \"信息\", {\n    confirmButtonText: \"确认\",\n    callback: () => {\n      // 页面跳转\n      router.push(\"/login\");\n      // 删除cookie\n      jsCookie.remove(\"username\");\n    },\n  });\n};\n\n// 添加标签栏\nconst addTab = (name: any, path: any) => {\n  let isExist = false;\n  // 判断标签是否存在\n  for (const item of editableTabs.value) {\n    if (item.name == name && item.path == path) {\n      isExist = true;\n      break;\n    }\n  }\n\n  // 若标签不存在则添加\n  if (!isExist) {\n    editableTabs.value.push({\n      name: name,\n      path: path,\n      closable: true,\n      routerName: path.substring(1),\n    });\n  }\n\n  // 切换标签页\n  editableTabsValue.value = path;\n};\n\n//标签栏\nlet editableTabsValue = ref(\"/home\");\nconst editableTabs = ref([\n  {\n    name: \"主页\",\n    path: \"/home\",\n    closable: false,\n    routerName: \"home\",\n  },\n]);\n\n// 点击标签栏\nconst tabClick = (tab: any) => {\n  router.push(tab.props.name);\n};\n\n// 移除标签栏\nconst tabRemove = (targetName: string) => {\n  const tabs = editableTabs.value;\n  let activeName = editableTabsValue.value;\n  if (activeName === targetName) {\n    tabs.forEach((tab, index) => {\n      if (tab.path === targetName) {\n        const nextTab = tabs[index + 1] || tabs[index - 1];\n        if (nextTab) {\n          activeName = nextTab.path;\n        }\n      }\n    });\n  }\n\n  // 切换页面\n  router.push(activeName);\n  editableTabsValue.value = activeName;\n  editableTabs.value = tabs.filter((tab) => tab.path !== targetName);\n};\n\n// 标签初始化\nconst tabName = router.currentRoute.value.name;\nconst tabPath = router.currentRoute.value.path;\naddTab(tabName, tabPath);\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/nav\";\n</style>\n","D:\\Libro\\WebUI\\library\\src\\views\\ReturnView.vue",["84"],"<template>\n  <div class=\"return\">\n    <el-container>\n      <el-main>\n        <!--        归还图书操作栏-->\n        <el-row class=\"return-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"18\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n        <!--        归还图书表格栏-->\n        <el-row class=\"return-table\">\n          <el-col>\n            <el-table :data=\"borrows\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"bookName\" label=\"书名\" />\n              <el-table-column prop=\"isbn\" label=\"ISBN号码\" />\n              <el-table-column prop=\"username\" label=\"借阅人\" />\n              <el-table-column prop=\"idCard\" label=\"借阅卡号\" />\n              <el-table-column prop=\"borrowTime\" label=\"借阅时间\" />\n              <el-table-column prop=\"returnTime\" label=\"应归还时间\" />\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"borrows\">\n                  <el-button @click=\"returnBookDialog(borrows.row)\" type=\"text\"\n                    >归还</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n        <!--        归还图书对话框-->\n        <el-dialog\n          v-model=\"returnBookDialogVisible\"\n          title=\"归还图书\"\n          width=\"500px\"\n        >\n          <span>确认归还 {{ returnName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"returnBookDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"primary\" @click=\"returnBook\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 借阅图书信息\nlet borrows = ref();\nconst getBorrow = () => {\n  axios\n    .get(\"http://localhost:8888/borrow/\" + pageNum.value + \"/\" + pageSize.value)\n    .then((resp) => {\n      borrows.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getBorrow();\n  } else {\n    searchBorrow();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getBorrow();\n  } else {\n    searchBorrow();\n  }\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchBorrow();\n};\n// 搜索借阅信息\nconst searchBorrow = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://localhost:8888/borrow/search/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        borrows.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getBorrow();\n  }\n};\n\n// 归还图书\nlet returnName = ref(\"\");\nlet returnId = ref(0);\nlet returnBookDialogVisible = ref(false);\nconst returnBookDialog = (row: any) => {\n  returnId.value = row.id;\n  returnName.value = row.bookName;\n  returnBookDialogVisible.value = true;\n};\nconst returnBook = () => {\n  if (returnId.value) {\n    axios\n      .post(\"http://localhost:8888/borrow/return/\" + returnId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 归还失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"归还图书失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 归还成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"归还图书成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              returnBookDialogVisible.value = false;\n            },\n          });\n        }\n        // 借阅记录不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"归还失败，此借阅记录不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  getBorrow();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/return\";\n</style>\n","D:\\Libro\\WebUI\\library\\src\\views\\SystemView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\UserView.vue",["85","86","87"],"<template>\n  <div class=\"user\">\n    <el-container>\n      <el-main>\n        <!--        用户操作栏-->\n        <el-row class=\"user-header\">\n          <el-col :span=\"4\" class=\"search-page-pane\">\n            <el-select\n              v-model=\"pageSize\"\n              placeholder=\"数据显示\"\n              @change=\"changeSize\"\n              class=\"search-size\"\n            >\n              <el-option\n                v-for=\"item in sizeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </el-col>\n          <el-col :span=\"16\" class=\"search-input-pane\">\n            <el-row>\n              <el-col :span=\"4\">\n                <el-select\n                  v-model=\"searchModel\"\n                  placeholder=\"搜索类型\"\n                  @change=\"changeSearch\"\n                  class=\"search-size\"\n                >\n                  <el-option\n                    v-for=\"item in searchOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  >\n                  </el-option>\n                </el-select>\n              </el-col>\n              <el-col :span=\"14\">\n                <el-input\n                  placeholder=\"请输入搜索内容\"\n                  v-model=\"searchInput\"\n                  :suffix-icon=\"Search\"\n                  class=\"search-input\"\n                >\n                </el-input>\n              </el-col>\n              <el-col :span=\"6\">\n                <el-button\n                  type=\"primary\"\n                  class=\"search-button\"\n                  @click=\"searchButton\"\n                >\n                  搜索\n                </el-button>\n              </el-col>\n            </el-row>\n          </el-col>\n          <el-col :span=\"4\" class=\"add-button-pane\">\n            <el-button\n              type=\"success\"\n              :icon=\"Plus\"\n              class=\"add-button\"\n              @click=\"addFromButton(addUserFormRef)\"\n            >\n              添加用户\n            </el-button>\n          </el-col>\n        </el-row>\n        <!--        用户表格栏-->\n        <el-row class=\"user-table\">\n          <el-col>\n            <el-table :data=\"users\" height=\"100%\" empty-text=\"没有数据\">\n              <el-table-column fixed prop=\"id\" label=\"Id\" width=\"50\" />\n              <el-table-column prop=\"groups\" label=\"组名\" />\n              <el-table-column prop=\"username\" label=\"用户名\" />\n              <el-table-column prop=\"name\" label=\"姓名\" />\n              <!--              <el-table-column prop=\"gender\" label=\"性别\" />-->\n              <el-table-column prop=\"idCard\" label=\"借书卡号\" />\n              <el-table-column prop=\"phone\" label=\"手机号\" />\n              <el-table-column prop=\"identity\" label=\"身份\" />\n              <el-table-column prop=\"bookCount\" label=\"可借书数量\" />\n              <el-table-column prop=\"state\" label=\"用户状态\">\n                <template #default=\"users\">\n                  <span v-if=\"users.row.state === 1\">正常</span>\n                  <span v-if=\"users.row.state === 0\">冻结</span>\n                </template>\n              </el-table-column>\n              <el-table-column fixed=\"right\" label=\"操作\">\n                <template #default=\"users\">\n                  <el-button\n                    @click=\"editFromButton(editUserFormRef, users.row)\"\n                    v-if=\"users.row.id !== 1\"\n                    type=\"text\"\n                    >编辑</el-button\n                  >\n                  <el-button\n                    @click=\"deleteUserDialog(users.row)\"\n                    v-if=\"users.row.id !== 1\"\n                    type=\"text\"\n                    >删除</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              background\n              v-model:current-page=\"pageNum\"\n              v-model:page-size=\"pageSize\"\n              layout=\"prev, pager, next\"\n              :total=\"pageTotal\"\n              @current-change=\"page\"\n            >\n            </el-pagination>\n          </el-col>\n        </el-row>\n\n        <!--         添加用户表单 -->\n        <el-dialog\n          v-model=\"addUserFormVisible\"\n          title=\"添加用户\"\n          class=\"add-user-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"addUserForm\"\n            :rules=\"userRules\"\n            ref=\"addUserFormRef\"\n            class=\"add-user-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"addUserForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in UserType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.label\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"用户名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"username\"\n            >\n              <el-input\n                v-model=\"addUserForm.username\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"密码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"password\"\n            >\n              <el-input\n                v-model=\"addUserForm.password\"\n                type=\"password\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"姓名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"addUserForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <!--            <el-form-item-->\n            <!--              label=\"性别\"-->\n            <!--              :label-width=\"formLabelWidth\"-->\n            <!--              prop=\"gender\"-->\n            <!--            >-->\n            <!--              <el-select v-model=\"addUserForm.gender\" placeholder=\"请选择性别\">-->\n            <!--                <el-option-->\n            <!--                  v-for=\"item in GenderType\"-->\n            <!--                  :key=\"item.typeId\"-->\n            <!--                  :label=\"item.typeName\"-->\n            <!--                  :value=\"item.typeName\"-->\n            <!--                >-->\n            <!--                </el-option>-->\n            <!--              </el-select>-->\n            <!--            </el-form-item>-->\n            <el-form-item\n              label=\"借书卡号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"idCard\"\n            >\n              <el-input\n                v-model.number=\"addUserForm.idCard\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"手机号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"phone\"\n            >\n              <el-input\n                v-model.number=\"addUserForm.phone\"\n                autocomplete=\"off\"\n                maxlength=\"11\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"身份\"\n              :label-width=\"formLabelWidth\"\n              prop=\"identity\"\n            >\n              <el-select\n                v-model=\"addUserForm.identity\"\n                placeholder=\"请选择身份\"\n              >\n                <el-option\n                  v-for=\"item in IdentityType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"addUserFormVisible = false\">取消</el-button>\n              <el-button type=\"primary\" @click=\"addUserButton(addUserFormRef)\">\n                添加\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        编辑用户表单-->\n        <el-dialog\n          v-model=\"editUserFormVisible\"\n          title=\"添加用户\"\n          class=\"edit-user-dialog\"\n          width=\"500px\"\n          :close-on-click-modal=\"false\"\n        >\n          <el-form\n            :model=\"editUserForm\"\n            :rules=\"userRules\"\n            ref=\"editUserFormRef\"\n            class=\"edit-user-form\"\n          >\n            <el-form-item\n              label=\"所属组\"\n              :label-width=\"formLabelWidth\"\n              prop=\"groups\"\n            >\n              <el-select\n                v-model=\"editUserForm.groups\"\n                placeholder=\"请选择所属组\"\n              >\n                <el-option\n                  v-for=\"item in UserType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.label\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"用户名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"username\"\n            >\n              <el-input\n                v-model=\"editUserForm.username\"\n                autocomplete=\"off\"\n                disabled\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"密码\"\n              :label-width=\"formLabelWidth\"\n              prop=\"password\"\n            >\n              <el-input\n                v-model=\"editUserForm.password\"\n                type=\"password\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"姓名\"\n              :label-width=\"formLabelWidth\"\n              prop=\"name\"\n            >\n              <el-input\n                v-model=\"editUserForm.name\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <!--            <el-form-item-->\n            <!--              label=\"性别\"-->\n            <!--              :label-width=\"formLabelWidth\"-->\n            <!--              prop=\"gender\"-->\n            <!--            >-->\n            <!--              <el-select v-model=\"editUserForm.gender\" placeholder=\"请选择性别\">-->\n            <!--                <el-option-->\n            <!--                  v-for=\"item in GenderType\"-->\n            <!--                  :key=\"item.typeId\"-->\n            <!--                  :label=\"item.label\"-->\n            <!--                  :value=\"item.typeName\"-->\n            <!--                >-->\n            <!--                </el-option>-->\n            <!--              </el-select>-->\n            <!--            </el-form-item>-->\n            <el-form-item\n              label=\"借书卡号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"idCard\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.idCard\"\n                autocomplete=\"off\"\n                disabled\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"手机号\"\n              :label-width=\"formLabelWidth\"\n              prop=\"phone\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.phone\"\n                autocomplete=\"off\"\n                maxlength=\"11\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"身份\"\n              :label-width=\"formLabelWidth\"\n              prop=\"identity\"\n            >\n              <el-select\n                v-model=\"editUserForm.identity\"\n                placeholder=\"请选择身份\"\n              >\n                <el-option\n                  v-for=\"item in IdentityType\"\n                  :key=\"item.typeId\"\n                  :label=\"item.typeName\"\n                  :value=\"item.typeName\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item\n              label=\"借书数量\"\n              :label-width=\"formLabelWidth\"\n              prop=\"bookCount\"\n            >\n              <el-input\n                v-model.number=\"editUserForm.bookCount\"\n                autocomplete=\"off\"\n              ></el-input>\n            </el-form-item>\n            <el-form-item\n              label=\"账号状态\"\n              :label-width=\"formLabelWidth\"\n              prop=\"state\"\n            >\n              <el-select\n                v-model=\"editUserForm.state\"\n                placeholder=\"选择账号状态\"\n              >\n                <el-option\n                  v-for=\"item in StateType\"\n                  :key=\"item.id\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                >\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-form>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"editUserFormVisible = false\">取消</el-button>\n              <el-button\n                type=\"primary\"\n                @click=\"editUserButton(editUserFormRef)\"\n              >\n                编辑\n              </el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!--        删除用户对话框-->\n        <el-dialog\n          v-model=\"deleteUserDialogVisible\"\n          title=\"删除用户\"\n          width=\"500px\"\n        >\n          <span>确认删除 {{ deleteName }}</span>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"deleteUserDialogVisible = false\"\n                >取消</el-button\n              >\n              <el-button type=\"danger\" @click=\"deleteUser\"> 确认 </el-button>\n            </span>\n          </template>\n        </el-dialog>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref } from \"vue\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { Plus, Search } from \"@element-plus/icons-vue\";\nimport axios from \"axios\";\nimport { ElMessageBox } from \"element-plus\";\n\n// 标签长度\nlet formLabelWidth = 120;\n\n// 获取用户数据\nlet users = ref();\nconst getUser = () => {\n  axios\n    .get(\"http://localhost:8888/user/\" + pageNum.value + \"/\" + pageSize.value)\n    .then((resp) => {\n      console.log(resp);\n      users.value = resp.data.content;\n      pageTotal.value = resp.data.totalElements;\n    });\n};\n\n// 显示数据数量选项\nlet pageNum = ref(1);\nlet pageSize = ref(10);\nlet pageTotal = ref(0);\nconst page = (val: number) => {\n  pageNum.value = val;\n  if (searchInput.value == undefined) {\n    getUser();\n  } else {\n    searchUser();\n  }\n};\n\n// 数据显示框\nlet sizeOptions = [\n  {\n    value: 10,\n    label: \"10条数据/页\",\n  },\n  {\n    value: 50,\n    label: \"50条数据/页\",\n  },\n  {\n    value: 100,\n    label: \"100条数据/页\",\n  },\n];\n// 修改显示数据量\nconst changeSize = (value: number) => {\n  pageSize.value = value;\n  if (searchInput.value == undefined) {\n    getUser();\n  } else {\n    searchUser();\n  }\n};\n\n// 搜索框选项\nlet searchModel = ref(\"username\");\nlet searchOptions = [\n  {\n    value: \"username\",\n    label: \"用户名\",\n  },\n  {\n    value: \"idCard\",\n    label: \"借书卡号\",\n  },\n  {\n    value: \"phone\",\n    label: \"手机号\",\n  },\n];\nconst changeSearch = (value: string) => {\n  searchModel.value = value;\n};\n\n// 搜索框数据\nconst searchInput = ref();\n// 搜索框按钮\nconst searchButton = () => {\n  pageNum.value = 1;\n  searchUser();\n};\n// 搜索用户\nconst searchUser = () => {\n  if (searchInput.value != \"\") {\n    axios\n      .get(\n        \"http://localhost:8888/user/search/\" +\n          searchModel.value +\n          \"/\" +\n          searchInput.value +\n          \"/\" +\n          pageNum.value +\n          \"/\" +\n          pageSize.value\n      )\n      .then((resp) => {\n        users.value = resp.data.content;\n        pageTotal.value = resp.data.totalElements;\n      });\n  } else {\n    getUser();\n  }\n};\n\n// 用户表单判断\nconst userRules = reactive<FormRules>({\n  groups: [{ required: true, message: \"请选择组名称\", trigger: \"change\" }],\n  username: [{ required: true, message: \"请输入用户名称\", trigger: \"blur\" }],\n  password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\n  name: [{ required: true, message: \"请输入用户姓名\", trigger: \"blur\" }],\n  gender: [{ required: true, message: \"请选择性别\", trigger: \"change\" }],\n  idCard: [{ required: true, message: \"请输入借书卡号\", trigger: \"blur\" }],\n  phone: [{ required: true, message: \"请输入手机号\", trigger: \"blur\" }],\n  identity: [{ required: true, message: \"请选择身份\", trigger: \"change\" }],\n  bookCount: [\n    { required: true, message: \"请输入可借阅图书数量\", trigger: \"blur\" },\n  ],\n  state: [{ required: true, message: \"请选择账号状态\", trigger: \"change\" }],\n});\n\n// 选项框属性\nconst UserType = ref([\n  {\n    typeId: 1,\n    typeName: \"admin\",\n    label: \"管理员\",\n  },\n  {\n    typeId: 2,\n    typeName: \"user\",\n    label: \"用户\",\n  },\n]);\nconst GenderType = ref([\n  {\n    typeId: 1,\n    typeName: \"男\",\n  },\n  {\n    typeId: 2,\n    typeName: \"女\",\n  },\n]);\nconst IdentityType = ref([\n  {\n    typeId: 1,\n    typeName: \"管理员\",\n  },\n  {\n    typeId: 2,\n    typeName: \"学生\",\n  },\n  {\n    typeId: 3,\n    typeName: \"教师\",\n  },\n]);\nconst StateType = ref([\n  {\n    id: 1,\n    value: 1,\n    label: \"正常\",\n  },\n  {\n    id: 2,\n    value: 0,\n    label: \"冻结\",\n  },\n]);\n\n// 添加用户对话框显示\nlet addUserFormVisible = ref(false);\n// 添加用户表单按钮\nconst addFromButton = (formEl: FormInstance | undefined) => {\n  addUserFormVisible.value = true;\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 添加用户表单\nconst addUserFormRef = ref<FormInstance>();\nlet addUserForm = reactive({\n  groups: \"\",\n  username: \"\",\n  password: \"\",\n  name: \"\",\n  gender: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n});\n\n// 添加用户按钮\nconst addUserButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://localhost:8888/user/save\", addUserForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 添加失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"添加用户失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 添加成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"添加成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                addUserFormVisible.value = false;\n              },\n            });\n          }\n          // 用户名存在\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"添加失败，此用户名已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 借书卡存在\n          if (statusCode == 3) {\n            ElMessageBox.alert(\"添加失败，此借书卡已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 手机号存在\n          if (statusCode == 4) {\n            ElMessageBox.alert(\"添加失败，此手机号已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 编辑用户对话框\nlet editUserFormVisible = ref(false);\nconst editFromButton = (formEl: FormInstance | undefined, row: number) => {\n  editUserFormVisible.value = true;\n  editUserForm = reactive(JSON.parse(JSON.stringify(row)));\n  if (!formEl) return;\n  formEl.resetFields();\n};\n\n// 编辑用户表单\nconst editUserFormRef = ref<FormInstance>();\nlet editUserForm = reactive({\n  groups: \"\",\n  username: \"\",\n  password: \"\",\n  name: \"\",\n  gender: \"\",\n  idCard: \"\",\n  phone: \"\",\n  identity: \"\",\n  bookCount: 0,\n  state: 1,\n});\n\n// 编辑用户按钮\nconst editUserButton = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      axios\n        .post(\"http://localhost:8888/user/update\", editUserForm)\n        .then((resp) => {\n          const statusCode = resp.data.statusCode;\n\n          // 编辑失败\n          if (statusCode == 0) {\n            ElMessageBox.alert(\"编辑用户失败，请重试\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n          // 编辑成功\n          if (statusCode == 1) {\n            ElMessageBox.alert(\"编辑成功\", \"信息\", {\n              confirmButtonText: \"确认\",\n              callback: () => {\n                editUserFormVisible.value = false;\n              },\n            });\n          }\n          // 手机号\n          if (statusCode == 2) {\n            ElMessageBox.alert(\"编辑失败，此手机号已存在\", \"信息\", {\n              confirmButtonText: \"确认\",\n            });\n          }\n        });\n    } else {\n      return false;\n    }\n  });\n};\n\n// 删除用户\nlet deleteName = ref(\"\");\nlet deleteId = ref(0);\nlet deleteUserDialogVisible = ref(false);\nconst deleteUserDialog = (row: any) => {\n  deleteId.value = row.id;\n  deleteName.value = row.username;\n  deleteUserDialogVisible.value = true;\n};\n\n// 删除用户按钮\nconst deleteUser = () => {\n  if (deleteId.value) {\n    axios\n      .post(\"http://localhost:8888/user/delete/\" + deleteId.value)\n      .then((resp) => {\n        const statusCode = resp.data.statusCode;\n\n        // 删除失败\n        if (statusCode == 0) {\n          ElMessageBox.alert(\"删除用户失败，请重试\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n        // 删除成功\n        if (statusCode == 1) {\n          ElMessageBox.alert(\"删除成功\", \"信息\", {\n            confirmButtonText: \"确认\",\n            callback: () => {\n              deleteUserDialogVisible.value = false;\n            },\n          });\n        }\n        // Id 不存在\n        if (statusCode == 2) {\n          ElMessageBox.alert(\"删除失败，此 Id 不存在\", \"信息\", {\n            confirmButtonText: \"确认\",\n          });\n        }\n      });\n  }\n};\n\n// 初始化\nconst init = () => {\n  getUser();\n};\ninit();\n</script>\n\n<style lang=\"scss\">\n@import \"../assets/css/user\";\n</style>\n","D:\\Libro\\WebUI\\library\\src\\store\\index.ts",[],"D:\\Libro\\WebUI\\library\\src\\views\\RegisterView.vue",[],"D:\\Libro\\WebUI\\library\\src\\views\\OvertimeView.vue",["88","89","90"],{"ruleId":"91","severity":1,"message":"92","line":351,"column":8,"nodeType":"93","messageId":"94","endLine":351,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":460,"column":26,"nodeType":"97","messageId":"98","endLine":460,"endColumn":29,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":460,"column":38,"nodeType":"97","messageId":"98","endLine":460,"endColumn":41,"suggestions":"100"},{"ruleId":"95","severity":1,"message":"96","line":460,"column":53,"nodeType":"97","messageId":"98","endLine":460,"endColumn":56,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"96","line":557,"column":64,"nodeType":"97","messageId":"98","endLine":557,"endColumn":67,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"96","line":619,"column":32,"nodeType":"97","messageId":"98","endLine":619,"endColumn":35,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":86,"column":10,"nodeType":"97","messageId":"98","endLine":86,"endColumn":13,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"96","line":87,"column":10,"nodeType":"97","messageId":"98","endLine":87,"endColumn":13,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"96","line":88,"column":10,"nodeType":"97","messageId":"98","endLine":88,"endColumn":13,"suggestions":"106"},{"ruleId":"91","severity":1,"message":"107","line":90,"column":7,"nodeType":"93","messageId":"94","endLine":90,"endColumn":8},{"ruleId":"95","severity":1,"message":"96","line":118,"column":23,"nodeType":"97","messageId":"98","endLine":118,"endColumn":26,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"96","line":118,"column":34,"nodeType":"97","messageId":"98","endLine":118,"endColumn":37,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"96","line":154,"column":24,"nodeType":"97","messageId":"98","endLine":154,"endColumn":27,"suggestions":"110"},{"ruleId":"95","severity":1,"message":"96","line":184,"column":32,"nodeType":"97","messageId":"98","endLine":184,"endColumn":35,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":446,"column":7,"nodeType":"114","messageId":"115","endLine":446,"endColumn":18},{"ruleId":"91","severity":1,"message":"116","line":569,"column":7,"nodeType":"93","messageId":"94","endLine":569,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":744,"column":32,"nodeType":"97","messageId":"98","endLine":744,"endColumn":35,"suggestions":"117"},{"ruleId":"95","severity":1,"message":"96","line":191,"column":34,"nodeType":"97","messageId":"98","endLine":191,"endColumn":37,"suggestions":"118"},{"ruleId":"112","severity":1,"message":"113","line":194,"column":3,"nodeType":"114","messageId":"115","endLine":194,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":195,"column":3,"nodeType":"114","messageId":"115","endLine":195,"endColumn":14},"@typescript-eslint/no-unused-vars","'router' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["119","120"],["121","122"],["123","124"],["125","126"],["127","128"],["129","130"],["131","132"],["133","134"],"'d' is assigned a value but never used.",["135","136"],["137","138"],["139","140"],["141","142"],"no-console","Unexpected console statement.","MemberExpression","unexpected","'GenderType' is assigned a value but never used.",["143","144"],["145","146"],{"messageId":"147","fix":"148","desc":"149"},{"messageId":"150","fix":"151","desc":"152"},{"messageId":"147","fix":"153","desc":"149"},{"messageId":"150","fix":"154","desc":"152"},{"messageId":"147","fix":"155","desc":"149"},{"messageId":"150","fix":"156","desc":"152"},{"messageId":"147","fix":"157","desc":"149"},{"messageId":"150","fix":"158","desc":"152"},{"messageId":"147","fix":"159","desc":"149"},{"messageId":"150","fix":"160","desc":"152"},{"messageId":"147","fix":"161","desc":"149"},{"messageId":"150","fix":"162","desc":"152"},{"messageId":"147","fix":"163","desc":"149"},{"messageId":"150","fix":"164","desc":"152"},{"messageId":"147","fix":"165","desc":"149"},{"messageId":"150","fix":"166","desc":"152"},{"messageId":"147","fix":"167","desc":"149"},{"messageId":"150","fix":"168","desc":"152"},{"messageId":"147","fix":"169","desc":"149"},{"messageId":"150","fix":"170","desc":"152"},{"messageId":"147","fix":"171","desc":"149"},{"messageId":"150","fix":"172","desc":"152"},{"messageId":"147","fix":"173","desc":"149"},{"messageId":"150","fix":"174","desc":"152"},{"messageId":"147","fix":"175","desc":"149"},{"messageId":"150","fix":"176","desc":"152"},{"messageId":"147","fix":"177","desc":"149"},{"messageId":"150","fix":"178","desc":"152"},"suggestUnknown",{"range":"179","text":"180"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"179","text":"181"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"182","text":"180"},{"range":"182","text":"181"},{"range":"183","text":"180"},{"range":"183","text":"181"},{"range":"184","text":"180"},{"range":"184","text":"181"},{"range":"185","text":"180"},{"range":"185","text":"181"},{"range":"186","text":"180"},{"range":"186","text":"181"},{"range":"187","text":"180"},{"range":"187","text":"181"},{"range":"188","text":"180"},{"range":"188","text":"181"},{"range":"189","text":"180"},{"range":"189","text":"181"},{"range":"190","text":"180"},{"range":"190","text":"181"},{"range":"191","text":"180"},{"range":"191","text":"181"},{"range":"192","text":"180"},{"range":"192","text":"181"},{"range":"193","text":"180"},{"range":"193","text":"181"},{"range":"194","text":"180"},{"range":"194","text":"181"},[12723,12726],"unknown","never",[12735,12738],[12750,12753],[15288,15291],[16775,16778],[2463,2466],[2502,2505],[2543,2546],[3431,3434],[3442,3445],[4045,4048],[4856,4859],[20751,20754],[5046,5049]]